Running all tests...
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /app/.jest/setEnvVars.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
FAIL test/updates.test.ts
  √¢‚Äî¬è Test suite failed to run

    [96mtest/updates.test.ts[0m:[93m20[0m:[93m33[0m - [91merror[0m[90m TS2554: [0mExpected 1 arguments, but got 0.

    [7m20[0m     const latestVersion = await getLatestVersion();
    [7m  [0m [91m                                ~~~~~~~~~~~~~~~~~~[0m

      [96msrc/updates.ts[0m:[93m10[0m:[93m40[0m
        [7m10[0m export async function getLatestVersion(packageName: string) {
        [7m  [0m [96m                                       ~~~~~~~~~~~~~~~~~~~[0m
        An argument for 'packageName' was not provided.
    [96mtest/updates.test.ts[0m:[93m29[0m:[93m18[0m - [91merror[0m[90m TS2554: [0mExpected 1 arguments, but got 0.

    [7m29[0m     await expect(getLatestVersion()).rejects.toThrow(
    [7m  [0m [91m                 ~~~~~~~~~~~~~~~~~~[0m

      [96msrc/updates.ts[0m:[93m10[0m:[93m40[0m
        [7m10[0m export async function getLatestVersion(packageName: string) {
        [7m  [0m [96m                                       ~~~~~~~~~~~~~~~~~~~[0m
        An argument for 'packageName' was not provided.

PASS test/telemetry.test.ts (9.998 s)
  Telemetry
    √¢≈ì‚Äú should not record events when telemetry is disabled (15 ms)
    √¢≈ì‚Äú should record events when telemetry is enabled (18 ms)
    √¢≈ì‚Äú should send events and clear events array when telemetry is enabled and send is called (4 ms)
    √¢≈ì‚Äú should not send events when telemetry is disabled and send is called (1 ms)

PASS test/prompts.test.ts (10.518 s)
  prompts
    √¢≈ì‚Äú readPrompts with single prompt file (38 ms)
    √¢≈ì‚Äú readPrompts with multiple prompt files (2 ms)
    √¢≈ì‚Äú readPrompts with directory (3 ms)
    √¢≈ì‚Äú readPrompts with empty input (2 ms)
    √¢≈ì‚Äú readPrompts with map input (3 ms)
    √¢≈ì‚Äú readPrompts with JSONL file (3 ms)
    √¢≈ì‚Äú readPrompts with .py file (2 ms)
    √¢≈ì‚Äú readPrompts with .js file (1 ms)
    √¢≈ì‚Äú readPrompts with glob pattern for .txt files (3 ms)

Error running Python script: Error: Test Error
Error running Python script: Error: Execution Error
Error executing Python code: Error: Execution Error
PASS test/pythonWrapper.test.ts (10.567 s)
  Python Wrapper
    runPython
      √¢≈ì‚Äú should correctly run a Python script with provided arguments (21 ms)
      √¢≈ì‚Äú should throw an error if the Python script execution fails (22 ms)
    runPythonCode
      √¢≈ì‚Äú should execute Python code from a string (6 ms)
      √¢≈ì‚Äú should clean up the temporary file after execution (2 ms)
      √¢≈ì‚Äú should throw an error if Python code execution fails (8 ms)

Creating cache folder at /root/.promptfoo/cache.
PASS test/util.test.ts (13.525 s)
  util
    √¢≈ì‚Äú writeOutput with CSV output (18 ms)
    √¢≈ì‚Äú writeOutput with JSON output (1 ms)
    √¢≈ì‚Äú writeOutput with YAML output (9 ms)
    √¢≈ì‚Äú writeOutput with json and txt output (4 ms)
    √¢≈ì‚Äú readFilters (1 ms)
    readCliConfig
      √¢≈ì‚Äú reads from existing config (10 ms)
      √¢≈ì‚Äú creates new config if none exists (1 ms)
    maybeRecordFirstRun
      √¢≈ì‚Äú returns true if it is the first run (2 ms)
      √¢≈ì‚Äú returns false if it is not the first run (1 ms)
    readConfigs
      √¢≈ì‚Äú reads from existing configs (21 ms)
      √¢≈ì‚Äú throws error for unsupported configuration file format (103 ms)
      √¢≈ì‚Äú makeAbsolute should resolve file:// syntax and plaintext prompts (3 ms)
      √¢≈ì‚Äú dedupes prompts when reading configs (3 ms)
    dereferenceConfig
      √¢≈ì‚Äú should dereference a config with no $refs (1 ms)
      √¢≈ì‚Äú should dereference a config with $refs (3 ms)
      √¢≈ì‚Äú should preserve regular functions when dereferencing (2 ms)
      √¢≈ì‚Äú should preserve tools with references and definitions when dereferencing (3 ms)
    transformOutput
      √¢≈ì‚Äú transforms output using a direct function (2 ms)
      √¢≈ì‚Äú transforms output using an imported function from a file (2 ms)
      √¢≈ì‚Äú throws error if transform function does not return a value (1 ms)
      √¢≈ì‚Äú throws error if file does not export a function (2 ms)

PASS test/cache.test.ts (13.536 s)
  fetchWithCache
    √¢≈ì‚Äú should not cache data with failed request (21 ms)
    √¢≈ì‚Äú should fetch data with cache enabled (4 ms)
    √¢≈ì‚Äú should fetch data with cache enabled after previous test (2 ms)
    √¢≈ì‚Äú should fetch data without cache for a single test (1 ms)
    √¢≈ì‚Äú should still fetch data without cache for a single test (2 ms)

PASS test/testCases.test.ts (13.731 s)
  readStandaloneTestsFile
    √¢≈ì‚Äú readStandaloneTestsFile with CSV input (19 ms)
    √¢≈ì‚Äú readStandaloneTestsFile with JSON input (2 ms)
    √¢≈ì‚Äú readStandaloneTestsFile with YAML input (8 ms)
  readTest
    √¢≈ì‚Äú readTest with string input (path to test config) (5 ms)
    √¢≈ì‚Äú readTest with TestCase input (1 ms)
    √¢≈ì‚Äú readTest with invalid input (31 ms)
    √¢≈ì‚Äú readTest with TestCase that contains a vars glob input (2 ms)
  readTests
    √¢≈ì‚Äú readTests with string input (CSV file path) (3 ms)
    √¢≈ì‚Äú readTests with multiple __expected in CSV (3 ms)
    √¢≈ì‚Äú readTests with array input (TestCase[]) (1 ms)
    √¢≈ì‚Äú readTests with string array input (paths to test configs) (3 ms)
    √¢≈ì‚Äú readTests with vars glob input (paths to vars configs) (2 ms)
  testCaseFromCsvRow
    √¢≈ì‚Äú should convert a CSV row to a TestCase object (1 ms)

Creating cache folder at /root/.promptfoo/cache.
FYI: Using unknown OpenAI completion model: foo
You are using model-graded assertions of types llm-rubric while testing an Azure provider. You may need to override these to use your Azure deployment. To learn more, see https://promptfoo.dev/docs/providers/azure/#model-graded-tests
You are using model-graded assertions of types llm-rubric while testing an Azure provider. You may need to override these to use your Azure deployment. To learn more, see https://promptfoo.dev/docs/providers/azure/#model-graded-tests
FYI: Using unknown OpenAI completion model: bar
Loaded provider openai:gpt-4 from path/to/mock-provider-file.yaml
Using unknown OpenAI chat model: ft:gpt-3.5-turbo-0613:company-name::ID:
PASS test/providers.azure.test.ts (15.137 s)
  maybeEmitAzureOpenAiWarning
    √¢≈ì‚Äú should not emit warning when no Azure providers are used (10 ms)
    √¢≈ì‚Äú should not emit warning when Azure provider is used alone, but no model graded eval (1 ms)
    √¢≈ì‚Äú should emit warning when Azure provider is used alone, but with model graded eval (1 ms)
    √¢≈ì‚Äú should emit warning when Azure provider used with non-OpenAI provider (1 ms)
    √¢≈ì‚Äú should not emit warning when Azure providers are used with a default provider set (1 ms)
    √¢≈ì‚Äú should not emit warning when both Azure and OpenAI providers are used (1 ms)

Using unknown OpenAI chat model: abc123
FYI: Using unknown OpenAI completion model: def456
PASS test/providers.test.ts (15.131 s)
  call provider apis
    √¢≈ì‚Äú OpenAiCompletionProvider callApi (17 ms)
    √¢≈ì‚Äú OpenAiChatCompletionProvider callApi (3 ms)
    √¢≈ì‚Äú OpenAiChatCompletionProvider callApi with caching (3 ms)
    √¢≈ì‚Äú OpenAiChatCompletionProvider callApi with cache disabled (2 ms)
    √¢≈ì‚Äú OpenAiChatCompletionProvider constructor with config (3 ms)
    √¢≈ì‚Äú AzureOpenAiCompletionProvider callApi (2 ms)
    √¢≈ì‚Äú AzureOpenAiChatCompletionProvider callApi (2 ms)
    √¢≈ì‚Äú AzureOpenAiChatCompletionProvider callApi with dataSources (2 ms)
    √¢≈ì‚Äú AzureOpenAiChatCompletionProvider callApi with cache disabled (2 ms)
    √¢≈ì‚Äú AnthropicCompletionProvider callApi (2 ms)
    √¢≈ì‚Äú AnthropicCompletionProvider callApi with caching (2 ms)
    √¢≈ì‚Äú AnthropicCompletionProvider callApi with caching disabled (2 ms)
    √¢≈ì‚Äú LlamaProvider callApi (1 ms)
    √¢≈ì‚Äú OllamaCompletionProvider callApi (1 ms)
    √¢≈ì‚Äú OllamaChatProvider callApi (1 ms)
    √¢≈ì‚Äú WebhookProvider callApi (1 ms)
    √¢≈ì‚Äú HuggingfaceFeatureExtractionProvider callEmbeddingApi (1 ms)
    √¢≈ì‚Äú HuggingfaceTextClassificationProvider callClassificationApi (1 ms)
    HuggingfaceTextGenerationProvider callApi with Array format
      √¢≈ì‚Äú returns expected output (1 ms)
    HuggingfaceTextGenerationProvider callApi with Object format
      √¢≈ì‚Äú returns expected output
    ScriptCompletionProvider callApi with script python rag.py
      √¢≈ì‚Äú returns expected output (6 ms)
    ScriptCompletionProvider callApi with script echo "hello world"
      √¢≈ì‚Äú returns expected output (2 ms)
    ScriptCompletionProvider callApi with script ./path/to/file.py run
      √¢≈ì‚Äú returns expected output (2 ms)
    ScriptCompletionProvider callApi with script "/Path/To/My File.py"
      √¢≈ì‚Äú returns expected output (2 ms)
  loadApiProvider
    √¢≈ì‚Äú loadApiProvider with filepath (7 ms)
    √¢≈ì‚Äú loadApiProvider with openai:chat
    √¢≈ì‚Äú loadApiProvider with openai:completion (1 ms)
    √¢≈ì‚Äú loadApiProvider with openai:assistant
    √¢≈ì‚Äú loadApiProvider with openai:chat:modelName (1 ms)
    √¢≈ì‚Äú loadApiProvider with openai:completion:modelName
    √¢≈ì‚Äú loadApiProvider with OpenAI finetuned model (4 ms)
    √¢≈ì‚Äú loadApiProvider with azureopenai:completion:modelName (1 ms)
    √¢≈ì‚Äú loadApiProvider with azureopenai:chat:modelName
    √¢≈ì‚Äú loadApiProvider with anthropic:completion
    √¢≈ì‚Äú loadApiProvider with anthropic:completion:modelName
    √¢≈ì‚Äú loadApiProvider with ollama:modelName
    √¢≈ì‚Äú loadApiProvider with ollama:completion:modelName (1 ms)
    √¢≈ì‚Äú loadApiProvider with ollama:chat:modelName
    √¢≈ì‚Äú loadApiProvider with llama:modelName (1 ms)
    √¢≈ì‚Äú loadApiProvider with webhook
    √¢≈ì‚Äú loadApiProvider with huggingface:text-generation
    √¢≈ì‚Äú loadApiProvider with huggingface:feature-extraction (1 ms)
    √¢≈ì‚Äú loadApiProvider with huggingface:text-classification
    √¢≈ì‚Äú loadApiProvider with hf:text-classification (1 ms)
    √¢≈ì‚Äú loadApiProvider with bedrock:completion
    √¢≈ì‚Äú loadApiProvider with RawProviderConfig (1 ms)
    √¢≈ì‚Äú loadApiProviders with ProviderFunction (1 ms)
    √¢≈ì‚Äú loadApiProviders with RawProviderConfig[] (1 ms)

Using unknown OpenAI chat model: foo
Using unknown OpenAI chat model: foo
Using unknown OpenAI chat model: foo
Using unknown OpenAI chat model: foo
PASS test/assertions.test.ts (15.529 s)
  runAssertions
    √¢≈ì‚Äú should pass when all assertions pass (15 ms)
    √¢≈ì‚Äú should fail when any assertion fails (1 ms)
    √¢≈ì‚Äú should handle output as an object (2 ms)
    √¢≈ì‚Äú should fail when combined score is less than threshold (2 ms)
    √¢≈ì‚Äú should pass when combined score is greater than threshold (2 ms)
  runAssertion
    √¢≈ì‚Äú should pass when the equality assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the equality assertion fails (1 ms)
    √¢≈ì‚Äú should handle output as an object (1 ms)
    √¢≈ì‚Äú should pass when the is-json assertion passes
    √¢≈ì‚Äú should fail when the is-json assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the is-json assertion passes with schema (70 ms)
    √¢≈ì‚Äú should fail when the is-json assertion fails with schema (2 ms)
    √¢≈ì‚Äú should pass when the is-json assertion passes with schema YAML string (9 ms)
    √¢≈ì‚Äú should fail when the is-json assertion fails with schema YAML string (5 ms)
    √¢≈ì‚Äú should validate JSON with formats using ajv-formats (3 ms)
    √¢≈ì‚Äú should validate JSON with formats using ajv-formats - failure (3 ms)
    √¢≈ì‚Äú should pass when the is-json assertion passes with external schema (6 ms)
    √¢≈ì‚Äú should fail when the is-json assertion fails with external schema (4 ms)
    √¢≈ì‚Äú should pass when the contains-json assertion passes (2 ms)
    √¢≈ì‚Äú should pass when the contains-json assertion passes with multiple json values (1 ms)
    √¢≈ì‚Äú should pass when the contains-json assertion passes with valid and invalid json (1 ms)
    √¢≈ì‚Äú should fail when the contains-json assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the contains-json assertion passes with schema (3 ms)
    √¢≈ì‚Äú should pass when the contains-json assertion passes with schema with YAML string (1 ms)
    √¢≈ì‚Äú should pass when the contains-json assertion passes with external schema (4 ms)
    √¢≈ì‚Äú should fail when the contains-json assertion fails with external schema (5 ms)
    √¢≈ì‚Äú should fail when the contains-json assertion fails with external schema (1 ms)
    √¢≈ì‚Äú should pass when the javascript assertion passes (2 ms)
    √¢≈ì‚Äú should pass a score through when the javascript returns a number (2 ms)
    √¢≈ì‚Äú should pass when javascript returns a number above threshold (1 ms)
    √¢≈ì‚Äú should fail when javascript returns a number below threshold (1 ms)
    √¢≈ì‚Äú should set score when javascript returns false (3 ms)
    √¢≈ì‚Äú should fail when the javascript assertion fails (2 ms)
    √¢≈ì‚Äú should pass when assertion passes - with vars (3 ms)
    √¢≈ì‚Äú should pass when javascript function assertion passes - with vars (2 ms)
    √¢≈ì‚Äú should fail when the javascript does not match vars (1 ms)
    √¢≈ì‚Äú should pass when the function returns pass (1 ms)
    √¢≈ì‚Äú should fail when the function returns fail (1 ms)
    √¢≈ì‚Äú should pass when the multiline javascript assertion passes (1 ms)
    √¢≈ì‚Äú should pass when the multiline javascript assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the not-contains assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the not-contains assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the icontains assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the icontains assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the not-icontains assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the not-icontains assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the contains-any assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the contains-any assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the icontains-any assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the icontains-any assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the contains-all assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the contains-all assertion fails
    √¢≈ì‚Äú should pass when the icontains-all assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the icontains-all assertion fails (2 ms)
    √¢≈ì‚Äú should pass when the regex assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the regex assertion fails
    √¢≈ì‚Äú should pass when the not-regex assertion passes
    √¢≈ì‚Äú should fail when the not-regex assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the webhook assertion passes (3 ms)
    √¢≈ì‚Äú should fail when the webhook assertion fails (1 ms)
    √¢≈ì‚Äú should fail when the webhook returns an error (1 ms)
    √¢≈ì‚Äú should pass when the rouge-n assertion passes (2 ms)
    √¢≈ì‚Äú should fail when the rouge-n assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the starts-with assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the starts-with assertion fails (1 ms)
    √¢≈ì‚Äú should use the provider from the assertion if it exists (5 ms)
    √¢≈ì‚Äú should pass when the levenshtein assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the levenshtein assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the file:// assertion with .js file returns a boolean (3 ms)
    √¢≈ì‚Äú should pass when the file:// assertion with .js file returns a number (1 ms)
    √¢≈ì‚Äú should pass when the file:// assertion with .js file returns a GradingResult
    √¢≈ì‚Äú should pass when the file:// assertion with .js file returns a boolean (1 ms)
    √¢≈ì‚Äú should pass when the file:// assertion with .js file returns a number (1 ms)
    √¢≈ì‚Äú should pass when the file:// assertion with .js file returns a GradingResult (1 ms)
    √¢≈ì‚Äú should pass when the file:// assertion with .js file returns a boolean Promise (1 ms)
    √¢≈ì‚Äú should handle output strings with both single and double quotes correctly in python assertion (2 ms)
    √¢≈ì‚Äú should handle inline return type boolean with return value: false (2 ms)
    √¢≈ì‚Äú should handle inline return type number with return value: 0 (1 ms)
    √¢≈ì‚Äú should handle inline return type GradingResult with return value: "{\"pass\": false, \"score\": 0, \"reason\": \"Custom error\"}" (1 ms)
    √¢≈ì‚Äú should handle inline return type boolean with return value: true (1 ms)
    √¢≈ì‚Äú should handle inline return type number with return value: 1 (1 ms)
    √¢≈ì‚Äú should handle inline return type GradingResult with return value: "{\"pass\": true, \"score\": 1, \"reason\": \"Custom success\"}" (1 ms)
    √¢≈ì‚Äú should handle when the file:// assertion with .py file returns a boolean (1 ms)
    √¢≈ì‚Äú should handle when the file:// assertion with .py file returns a number (1 ms)
    √¢≈ì‚Äú should handle when the file:// assertion with .py file returns a boolean
    √¢≈ì‚Äú should handle when the file:// assertion with .py file returns a number (1 ms)
    √¢≈ì‚Äú should handle when the file:// assertion with .py file returns a GradingResult (1 ms)
    √¢≈ì‚Äú should handle when the file:// assertion with .py file returns a boolean (1 ms)
    √¢≈ì‚Äú should handle when the file:// assertion with .py file returns a number (1 ms)
    √¢≈ì‚Äú should handle when the file:// assertion with .py file returns a GradingResult (1 ms)
    latency assertion
      √¢≈ì‚Äú should pass when the latency assertion passes (1 ms)
      √¢≈ì‚Äú should fail when the latency assertion fails (1 ms)
      √¢≈ì‚Äú should throw an error when grading result is missing latencyMs (72 ms)
    perplexity assertion
      √¢≈ì‚Äú should pass when the perplexity assertion passes (1 ms)
      √¢≈ì‚Äú should fail when the perplexity assertion fails (1 ms)
    perplexity-score assertion
      √¢≈ì‚Äú should pass when the perplexity-score assertion passes (1 ms)
      √¢≈ì‚Äú should fail when the perplexity-score assertion fails
    cost assertion
      √¢≈ì‚Äú should pass when the cost is below the threshold (1 ms)
      √¢≈ì‚Äú should fail when the cost exceeds the threshold (1 ms)
    is-valid-openai-function-call assertion
      √¢≈ì‚Äú should pass for a valid function call with correct arguments (27 ms)
      √¢≈ì‚Äú should fail for an invalid function call with incorrect arguments (3 ms)
    is-valid-openai-tools-call assertion
      √¢≈ì‚Äú should pass for a valid tools call with correct arguments (2 ms)
      √¢≈ì‚Äú should fail for an invalid tools call with incorrect arguments (2 ms)
  assertionFromString
    √¢≈ì‚Äú should create an equality assertion (1 ms)
    √¢≈ì‚Äú should create an is-json assertion (1 ms)
    √¢≈ì‚Äú should create an is-json assertion with value (1 ms)
    √¢≈ì‚Äú should create an contains-json assertion
    √¢≈ì‚Äú should create a function assertion
    √¢≈ì‚Äú should create a similarity assertion
    √¢≈ì‚Äú should create a contains assertion (1 ms)
    √¢≈ì‚Äú should create a not-contains assertion
    √¢≈ì‚Äú should create a contains-any assertion (1 ms)
    √¢≈ì‚Äú should create a contains-all assertion
    √¢≈ì‚Äú should create a regex assertion (1 ms)
    √¢≈ì‚Äú should create a not-regex assertion
    √¢≈ì‚Äú should create an icontains assertion
    √¢≈ì‚Äú should create a not-icontains assertion (1 ms)
    √¢≈ì‚Äú should create a webhook assertion
    √¢≈ì‚Äú should create a not-webhook assertion (1 ms)
    √¢≈ì‚Äú should create a rouge-n assertion
    √¢≈ì‚Äú should create a not-rouge-n assertion (1 ms)
    √¢≈ì‚Äú should create a starts-with assertion (1 ms)
    √¢≈ì‚Äú should create a levenshtein assertion
    √¢≈ì‚Äú should create a classifier assertion (1 ms)
    √¢≈ì‚Äú should create a latency assertion
    √¢≈ì‚Äú should create a perplexity assertion (1 ms)
    √¢≈ì‚Äú should create a perplexity-score assertion
    √¢≈ì‚Äú should create a cost assertion (1 ms)
    √¢≈ì‚Äú should create an openai function call assertion

Using unknown OpenAI chat model: foo
Using unknown OpenAI chat model: foo
Using unknown OpenAI chat model: foo
Using unknown OpenAI chat model: foo
Using unknown OpenAI chat model: gpt-3.5-turbo-foobar
Using unknown OpenAI chat model: gpt-3.5-turbo-foobar
Provider test-provider is not a valid embedding provider for 'test check', falling back to default
Using unknown OpenAI chat model: foo
Using unknown OpenAI chat model: foo
Using unknown OpenAI chat model: foo
PASS test/matchers.test.ts (15.812 s)
  runAssertions
    √¢≈ì‚Äú should pass when all assertions pass (15 ms)
    √¢≈ì‚Äú should fail when any assertion fails (2 ms)
    √¢≈ì‚Äú should handle output as an object (1 ms)
    √¢≈ì‚Äú should fail when combined score is less than threshold (3 ms)
    √¢≈ì‚Äú should pass when combined score is greater than threshold (2 ms)
  runAssertion
    √¢≈ì‚Äú should pass when the equality assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the equality assertion fails (1 ms)
    √¢≈ì‚Äú should handle output as an object (1 ms)
    √¢≈ì‚Äú should pass when the is-json assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the is-json assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the is-json assertion passes with schema (60 ms)
    √¢≈ì‚Äú should fail when the is-json assertion fails with schema (1 ms)
    √¢≈ì‚Äú should pass when the is-json assertion passes with schema YAML string (9 ms)
    √¢≈ì‚Äú should fail when the is-json assertion fails with schema YAML string (5 ms)
    √¢≈ì‚Äú should validate JSON with formats using ajv-formats (3 ms)
    √¢≈ì‚Äú should validate JSON with formats using ajv-formats - failure (2 ms)
    √¢≈ì‚Äú should pass when the is-json assertion passes with external schema (5 ms)
    √¢≈ì‚Äú should fail when the is-json assertion fails with external schema (6 ms)
    √¢≈ì‚Äú should pass when the contains-json assertion passes (1 ms)
    √¢≈ì‚Äú should pass when the contains-json assertion passes with multiple json values (1 ms)
    √¢≈ì‚Äú should pass when the contains-json assertion passes with valid and invalid json (1 ms)
    √¢≈ì‚Äú should fail when the contains-json assertion fails
    √¢≈ì‚Äú should pass when the contains-json assertion passes with schema (3 ms)
    √¢≈ì‚Äú should pass when the contains-json assertion passes with schema with YAML string (1 ms)
    √¢≈ì‚Äú should pass when the contains-json assertion passes with external schema (3 ms)
    √¢≈ì‚Äú should fail when the contains-json assertion fails with external schema (3 ms)
    √¢≈ì‚Äú should fail when the contains-json assertion fails with external schema (1 ms)
    √¢≈ì‚Äú should pass when the javascript assertion passes (1 ms)
    √¢≈ì‚Äú should pass a score through when the javascript returns a number (1 ms)
    √¢≈ì‚Äú should pass when javascript returns a number above threshold (1 ms)
    √¢≈ì‚Äú should fail when javascript returns a number below threshold (1 ms)
    √¢≈ì‚Äú should set score when javascript returns false (2 ms)
    √¢≈ì‚Äú should fail when the javascript assertion fails (1 ms)
    √¢≈ì‚Äú should pass when assertion passes - with vars (2 ms)
    √¢≈ì‚Äú should pass when javascript function assertion passes - with vars (1 ms)
    √¢≈ì‚Äú should fail when the javascript does not match vars (1 ms)
    √¢≈ì‚Äú should pass when the function returns pass (1 ms)
    √¢≈ì‚Äú should fail when the function returns fail (1 ms)
    √¢≈ì‚Äú should pass when the multiline javascript assertion passes (1 ms)
    √¢≈ì‚Äú should pass when the multiline javascript assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the not-contains assertion passes
    √¢≈ì‚Äú should fail when the not-contains assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the icontains assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the icontains assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the not-icontains assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the not-icontains assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the contains-any assertion passes (2 ms)
    √¢≈ì‚Äú should fail when the contains-any assertion fails (2 ms)
    √¢≈ì‚Äú should pass when the icontains-any assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the icontains-any assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the contains-all assertion passes (6 ms)
    √¢≈ì‚Äú should fail when the contains-all assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the icontains-all assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the icontains-all assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the regex assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the regex assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the not-regex assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the not-regex assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the webhook assertion passes (3 ms)
    √¢≈ì‚Äú should fail when the webhook assertion fails (2 ms)
    √¢≈ì‚Äú should fail when the webhook returns an error (1 ms)
    √¢≈ì‚Äú should pass when the rouge-n assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the rouge-n assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the starts-with assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the starts-with assertion fails (1 ms)
    √¢≈ì‚Äú should use the provider from the assertion if it exists (2 ms)
    √¢≈ì‚Äú should pass when the levenshtein assertion passes (1 ms)
    √¢≈ì‚Äú should fail when the levenshtein assertion fails (1 ms)
    √¢≈ì‚Äú should pass when the file:// assertion with .js file returns a boolean (4 ms)
    √¢≈ì‚Äú should pass when the file:// assertion with .js file returns a number (1 ms)
    √¢≈ì‚Äú should pass when the file:// assertion with .js file returns a GradingResult (1 ms)
    √¢≈ì‚Äú should pass when the file:// assertion with .js file returns a boolean (1 ms)
    √¢≈ì‚Äú should pass when the file:// assertion with .js file returns a number (2 ms)
    √¢≈ì‚Äú should pass when the file:// assertion with .js file returns a GradingResult (1 ms)
    √¢≈ì‚Äú should pass when the file:// assertion with .js file returns a boolean Promise (1 ms)
    √¢≈ì‚Äú should handle output strings with both single and double quotes correctly in python assertion (2 ms)
    √¢≈ì‚Äú should handle inline return type boolean with return value: false (1 ms)
    √¢≈ì‚Äú should handle inline return type number with return value: 0 (2 ms)
    √¢≈ì‚Äú should handle inline return type GradingResult with return value: "{\"pass\": false, \"score\": 0, \"reason\": \"Custom error\"}" (1 ms)
    √¢≈ì‚Äú should handle inline return type boolean with return value: true (1 ms)
    √¢≈ì‚Äú should handle inline return type number with return value: 1 (2 ms)
    √¢≈ì‚Äú should handle inline return type GradingResult with return value: "{\"pass\": true, \"score\": 1, \"reason\": \"Custom success\"}" (1 ms)
    √¢≈ì‚Äú should handle when the file:// assertion with .py file returns a boolean (2 ms)
    √¢≈ì‚Äú should handle when the file:// assertion with .py file returns a number (1 ms)
    √¢≈ì‚Äú should handle when the file:// assertion with .py file returns a boolean (1 ms)
    √¢≈ì‚Äú should handle when the file:// assertion with .py file returns a number (1 ms)
    √¢≈ì‚Äú should handle when the file:// assertion with .py file returns a GradingResult (1 ms)
    √¢≈ì‚Äú should handle when the file:// assertion with .py file returns a boolean (1 ms)
    √¢≈ì‚Äú should handle when the file:// assertion with .py file returns a number
    √¢≈ì‚Äú should handle when the file:// assertion with .py file returns a GradingResult (1 ms)
    latency assertion
      √¢≈ì‚Äú should pass when the latency assertion passes (1 ms)
      √¢≈ì‚Äú should fail when the latency assertion fails (1 ms)
      √¢≈ì‚Äú should throw an error when grading result is missing latencyMs (78 ms)
    perplexity assertion
      √¢≈ì‚Äú should pass when the perplexity assertion passes (1 ms)
      √¢≈ì‚Äú should fail when the perplexity assertion fails
    perplexity-score assertion
      √¢≈ì‚Äú should pass when the perplexity-score assertion passes (1 ms)
      √¢≈ì‚Äú should fail when the perplexity-score assertion fails (1 ms)
    cost assertion
      √¢≈ì‚Äú should pass when the cost is below the threshold
      √¢≈ì‚Äú should fail when the cost exceeds the threshold
    is-valid-openai-function-call assertion
      √¢≈ì‚Äú should pass for a valid function call with correct arguments (24 ms)
      √¢≈ì‚Äú should fail for an invalid function call with incorrect arguments (2 ms)
    is-valid-openai-tools-call assertion
      √¢≈ì‚Äú should pass for a valid tools call with correct arguments (3 ms)
      √¢≈ì‚Äú should fail for an invalid tools call with incorrect arguments (2 ms)
  assertionFromString
    √¢≈ì‚Äú should create an equality assertion (1 ms)
    √¢≈ì‚Äú should create an is-json assertion (1 ms)
    √¢≈ì‚Äú should create an is-json assertion with value (1 ms)
    √¢≈ì‚Äú should create an contains-json assertion
    √¢≈ì‚Äú should create a function assertion (1 ms)
    √¢≈ì‚Äú should create a similarity assertion
    √¢≈ì‚Äú should create a contains assertion (1 ms)
    √¢≈ì‚Äú should create a not-contains assertion
    √¢≈ì‚Äú should create a contains-any assertion (1 ms)
    √¢≈ì‚Äú should create a contains-all assertion (1 ms)
    √¢≈ì‚Äú should create a regex assertion
    √¢≈ì‚Äú should create a not-regex assertion (1 ms)
    √¢≈ì‚Äú should create an icontains assertion (1 ms)
    √¢≈ì‚Äú should create a not-icontains assertion
    √¢≈ì‚Äú should create a webhook assertion (1 ms)
    √¢≈ì‚Äú should create a not-webhook assertion
    √¢≈ì‚Äú should create a rouge-n assertion (1 ms)
    √¢≈ì‚Äú should create a not-rouge-n assertion (1 ms)
    √¢≈ì‚Äú should create a starts-with assertion
    √¢≈ì‚Äú should create a levenshtein assertion (1 ms)
    √¢≈ì‚Äú should create a classifier assertion (1 ms)
    √¢≈ì‚Äú should create a latency assertion
    √¢≈ì‚Äú should create a perplexity assertion (1 ms)
    √¢≈ì‚Äú should create a perplexity-score assertion
    √¢≈ì‚Äú should create a cost assertion (1 ms)
    √¢≈ì‚Äú should create an openai function call assertion
  matchesSimilarity
    √¢≈ì‚Äú should pass when similarity is above the threshold (2 ms)
    √¢≈ì‚Äú should fail when similarity is below the threshold
    √¢≈ì‚Äú should fail when inverted similarity is above the threshold (1 ms)
    √¢≈ì‚Äú should pass when inverted similarity is below the threshold (1 ms)
    √¢≈ì‚Äú should use the overridden simmilarity grading config (2 ms)
    √¢≈ì‚Äú should throw an error when API call fails (16 ms)
  matchesLlmRubric
    √¢≈ì‚Äú should pass when the grading provider returns a passing result (1 ms)
    √¢≈ì‚Äú should fail when the grading provider returns a failing result (1 ms)
    √¢≈ì‚Äú should use the overridden llm rubric grading config (2 ms)
  matchesFactuality
    √¢≈ì‚Äú should pass when the factuality check passes (3 ms)
    √¢≈ì‚Äú should fail when the factuality check fails (3 ms)
    √¢≈ì‚Äú should use the overridden factuality grading config (2 ms)
    √¢≈ì‚Äú should throw an error when an error occurs (13 ms)
  matchesClosedQa
    √¢≈ì‚Äú should pass when the closed QA check passes (3 ms)
    √¢≈ì‚Äú should fail when the closed QA check fails (1 ms)
    √¢≈ì‚Äú should throw an error when an error occurs (1 ms)
    √¢≈ì‚Äú should handle input, criteria, and completion that need escaping (1 ms)
  getGradingProvider
    √¢≈ì‚Äú should return the correct provider when provider is a string (1 ms)
    √¢≈ì‚Äú should return the correct provider when provider is an ApiProvider
    √¢≈ì‚Äú should return the correct provider when provider is ProviderOptions (1 ms)
    √¢≈ì‚Äú should return the default provider when provider is not provided
    √¢≈ì‚Äú should return the default provider when no provider is specified
    √¢≈ì‚Äú should return a specific provider when a provider id is specified (1 ms)
    √¢≈ì‚Äú should return a provider from ApiProvider when specified (1 ms)
    √¢≈ì‚Äú should return a provider from ProviderTypeMap when specified
    √¢≈ì‚Äú should return a provider from ProviderTypeMap with basic strings (1 ms)
    √¢≈ì‚Äú should throw an error when the provider does not match the type (1 ms)
  getAndCheckProvider
    √¢≈ì‚Äú should return the default provider when provider is not defined (1 ms)
    √¢≈ì‚Äú should return the default provider when provider does not support type
    √¢≈ì‚Äú should return the provider if it implements the required method (1 ms)
  matchesAnswerRelevance
    √¢≈ì‚Äú should pass when the relevance score is above the threshold (2 ms)
    √¢≈ì‚Äú should fail when the relevance score is below the threshold (1 ms)
  matchesClassification
    √¢≈ì‚Äú should pass when the classification score is above the threshold
    √¢≈ì‚Äú should fail when the classification score is below the threshold (1 ms)
    √¢≈ì‚Äú should pass when the maximum classification score is above the threshold with undefined expected (1 ms)
    √¢≈ì‚Äú should use the overridden classification grading config
  matchesContextRelevance
    √¢≈ì‚Äú should pass when the relevance score is above the threshold (1 ms)
    √¢≈ì‚Äú should fail when the relevance score is below the threshold (1 ms)
  matchesContextFaithfulness
    √¢≈ì‚Äú should pass when the faithfulness score is above the threshold (2 ms)
    √¢≈ì‚Äú should fail when the faithfulness score is below the threshold (3 ms)
  matchesContextRecall
    √¢≈ì‚Äú should pass when the recall score is above the threshold (3 ms)
    √¢≈ì‚Äú should fail when the recall score is below the threshold (2 ms)

Test Suites: 1 failed, 10 passed, 11 total
Tests:       411 passed, 411 total
Snapshots:   0 total
Time:        16.582 s
