Running all tests...
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
ts-jest[ts-jest-transformer] (WARN) Define `ts-jest` config under `globals` is deprecated. Please do
transform: {
    <transform_regex>: ['ts-jest', { /* ts-jest config goes here in Jest */ }],
},
ts-jest[ts-jest-transformer] (WARN) Got a `.js` file to compile while `allowJs` option is not set to `true` (file: /app/.jest/setEnvVars.js). To fix this:
  - if you want TypeScript to process JS files, set `allowJs` to `true` in your TypeScript config (usually tsconfig.json)
  - if you do not want TypeScript to process your `.js` files, in your Jest config change the `transform` key which value is `ts-jest` so that it does not match `.js` files anymore
FAIL examples/jest-integration/index.test.ts
  â— Test suite failed to run

    [96mexamples/jest-integration/index.test.ts[0m:[93m3[0m:[93m36[0m - [91merror[0m[90m TS2307: [0mCannot find module '../../dist/types.js' or its corresponding type declarations.

    [7m3[0m import type { GradingConfig } from '../../dist/types.js';
    [7m [0m [91m                                   ~~~~~~~~~~~~~~~~~~~~~[0m

Creating cache folder at /root/.promptfoo/cache.
Creating cache folder at /root/.promptfoo/cache.
Cache is disabled.
Cache is disabled.
Cache is disabled.
PASS test/cache.test.ts
  fetchJsonWithCache
    âœ“ should not cache data with failed request (11 ms)
    âœ“ should fetch data with cache enabled (2 ms)
    âœ“ should fetch data with cache enabled after previous test (1 ms)
    âœ“ should fetch data without cache for a single test (1 ms)
    âœ“ should still fetch data without cache for a single test (2 ms)

PASS test/providers.test.ts
  providers
    âœ“ OpenAiCompletionProvider callApi (11 ms)
    âœ“ OpenAiChatCompletionProvider callApi (3 ms)
    âœ“ OpenAiChatCompletionProvider callApi with cache disabled (2 ms)
    âœ“ loadApiProvider with openai:chat (1 ms)
    âœ“ loadApiProvider with openai:completion (1 ms)
    âœ“ loadApiProvider with openai:chat:modelName
    âœ“ loadApiProvider with openai:completion:modelName (6 ms)

PASS test/util.test.ts
  util
    âœ“ readPrompts with single prompt file (6 ms)
    âœ“ readPrompts with multiple prompt files (1 ms)
    âœ“ readPrompts with directory (1 ms)
    âœ“ readPrompts with empty input (1 ms)
    âœ“ readPrompts with map input (1 ms)
    âœ“ readVars with CSV input (7 ms)
    âœ“ readVars with JSON input (1 ms)
    âœ“ readVars with YAML input (7 ms)
    âœ“ writeOutput with CSV output (3 ms)
    âœ“ writeOutput with JSON output (1 ms)
    âœ“ writeOutput with YAML output (5 ms)
  readTests
    âœ“ readTests with no input (1 ms)
    âœ“ readTests with string input (CSV file path) (2 ms)
    âœ“ readTests with array input (TestCase[]) (1 ms)

FAIL test/assertions.test.ts
  runAssertions
    âœ“ should pass when all assertions pass (3 ms)
    âœ“ should fail when any assertion fails (1 ms)
  runAssertion
    âœ“ should pass when the equality assertion passes (1 ms)
    âœ“ should fail when the equality assertion fails (1 ms)
    âœ“ should pass when the is-json assertion passes (1 ms)
    âœ“ should fail when the is-json assertion fails (1 ms)
    âœ“ should pass when the contains-json assertion passes (1 ms)
    âœ“ should fail when the contains-json assertion fails (1 ms)
    âœ“ should pass when the function assertion passes
    âœ“ should fail when the function assertion fails
    âœ• should pass when the function assertion passes - with vars (2 ms)
    âœ• should fail when the function does not match vars (7 ms)
    âœ“ should pass when the not-contains assertion passes (1 ms)
    âœ“ should fail when the not-contains assertion fails
    âœ“ should pass when the icontains assertion passes (6 ms)
    âœ“ should fail when the icontains assertion fails (1 ms)
    âœ“ should pass when the not-icontains assertion passes (1 ms)
    âœ“ should fail when the not-icontains assertion fails
    âœ“ should pass when the contains-any assertion passes (1 ms)
    âœ“ should fail when the contains-any assertion fails
    âœ“ should pass when the contains-all assertion passes
    âœ“ should fail when the contains-all assertion fails
    âœ“ should pass when the regex assertion passes
    âœ“ should fail when the regex assertion fails (1 ms)
    âœ“ should pass when the not-regex assertion passes
    âœ“ should fail when the not-regex assertion fails (1 ms)
  assertionFromString
    âœ“ should create an equality assertion
    âœ“ should create an is-json assertion
    âœ“ should create an contains-json assertion
    âœ“ should create a function assertion (1 ms)
    âœ“ should create a similarity assertion
    âœ“ should create a contains assertion (1 ms)
    âœ“ should create a not-contains assertion
    âœ“ should create a contains-any assertion (1 ms)
    âœ“ should create a contains-all assertion
    âœ“ should create a regex assertion (1 ms)
    âœ“ should create a not-regex assertion
    âœ“ should create an icontains assertion
    âœ“ should create a not-icontains assertion
  matchesSimilarity
    âœ“ should pass when similarity is above the threshold (2 ms)
    âœ“ should fail when similarity is below the threshold
    âœ“ should fail when inverted similarity is above the threshold (1 ms)
    âœ“ should pass when inverted similarity is below the threshold
  matchesLlmRubric
    âœ“ should pass when the grading provider returns a passing result (6 ms)
    âœ“ should fail when the grading provider returns a failing result (2 ms)

  â— runAssertion â€º should pass when the function assertion passes - with vars

    expect(received).toBeTruthy()

    Received: false

      164 |       output,
      165 |     );
    > 166 |     expect(result.pass).toBeTruthy();
          |                         ^
      167 |     expect(result.reason).toBe('Assertion passed');
      168 |   });
      169 |

      at Object.<anonymous> (test/assertions.test.ts:166:25)

  â— runAssertion â€º should fail when the function does not match vars

    expect(received).toBe(expected) // Object.is equality

    - Expected  - 1
    + Received  + 1

    - Custom function returned false
    + Custom function threw error: context is not defined
      output === "Expected output" && context.vars.foo === "something else"

      181 |     );
      182 |     expect(result.pass).toBeFalsy();
    > 183 |     expect(result.reason).toBe(
          |                           ^
      184 |       'Custom function returned false\noutput === "Expected output" && context.vars.foo === "something else"',
      185 |     );
      186 |   });

      at Object.<anonymous> (test/assertions.test.ts:183:27)

Test Suites: 2 failed, 3 passed, 5 total
Tests:       2 failed, 69 passed, 71 total
Snapshots:   0 total
Time:        5.339 s
